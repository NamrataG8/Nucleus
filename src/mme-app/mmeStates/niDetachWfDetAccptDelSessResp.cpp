  
/*
 * Copyright 2019-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
/**************************************
 * niDetachWfDetAccptDelSessResp.cpp
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.cpp.tt>
 **************************************/

#include "smEnumTypes.h"
#include "actionTable.h"
#include "actionHandlers/actionHandlers.h"

#include "mmeStates/niDetachWfDetAccptDelSessResp.h"	
#include "mmeStates/niDetachWfDelSessResp.h"	
#include "mmeStates/niDetachWfDetachAccept.h"

using namespace mme;
using namespace SM;

/******************************************************************************
* Constructor
******************************************************************************/
NiDetachWfDetAccptDelSessResp::NiDetachWfDetAccptDelSessResp():State(State_e::ni_detach_wf_det_accpt_del_sess_resp)
{
}

/******************************************************************************
* Destructor
******************************************************************************/
NiDetachWfDetAccptDelSessResp::~NiDetachWfDetAccptDelSessResp()
{
}

/******************************************************************************
* creates and returns static instance
******************************************************************************/
NiDetachWfDetAccptDelSessResp* NiDetachWfDetAccptDelSessResp::Instance()
{
        static NiDetachWfDetAccptDelSessResp state;
        return &state;
}

/******************************************************************************
* initializes eventToActionsMap
******************************************************************************/
void NiDetachWfDetAccptDelSessResp::initialize()
{
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::process_detach_accept_from_ue);
                actionTable.setNextState(NiDetachWfDelSessResp::Instance());
                eventToActionsMap.insert(pair<Event_e, ActionTable>(Event_e::DETACH_ACCEPT_FROM_UE, actionTable));
        }
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::process_del_session_resp);
                actionTable.setNextState(NiDetachWfDetachAccept::Instance());
                eventToActionsMap.insert(pair<Event_e, ActionTable>(Event_e::DEL_SESSION_RESP_FROM_SGW, actionTable));
        }
}
