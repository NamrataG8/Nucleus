  
/*
 * Copyright 2019-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
/**************************************
 * s1HoWfSrcS1RelTauRequest.cpp
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.cpp.tt>
 **************************************/

#include "mmeSmDefs.h"
#include "actionTable.h"
#include "actionHandlers/actionHandlers.h"

#include "mmeStates/s1HoWfSrcS1RelTauRequest.h"	
#include "mmeStates/s1HoWfTauRequest.h"	
#include "mmeStates/s1HoWfSrcS1RelCmp.h"

using namespace mme;
using namespace SM;

/******************************************************************************
* Constructor
******************************************************************************/
S1HoWfSrcS1RelTauRequest::S1HoWfSrcS1RelTauRequest():State(s1_ho_wf_src_s1_rel_tau_request)
{
}

/******************************************************************************
* Destructor
******************************************************************************/
S1HoWfSrcS1RelTauRequest::~S1HoWfSrcS1RelTauRequest()
{
}

/******************************************************************************
* creates and returns static instance
******************************************************************************/
S1HoWfSrcS1RelTauRequest* S1HoWfSrcS1RelTauRequest::Instance()
{
        static S1HoWfSrcS1RelTauRequest state;
        return &state;
}

/******************************************************************************
* initializes eventToActionsMap
******************************************************************************/
void S1HoWfSrcS1RelTauRequest::initialize()
{
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::process_ue_ctxt_rel_comp_for_ho);
                actionTable.setNextState(S1HoWfTauRequest::Instance());
                eventToActionsMap.insert(pair<uint16_t, ActionTable>(UE_CTXT_REL_COMP_FROM_ENB, actionTable));
        }
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::process_tau_request);
                actionTable.addAction(&ActionHandlers::send_tau_response_to_ue);
                actionTable.setNextState(S1HoWfSrcS1RelCmp::Instance());
                eventToActionsMap.insert(pair<uint16_t, ActionTable>(TAU_REQUEST_FROM_UE, actionTable));
        }
}
