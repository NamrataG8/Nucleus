[%- USE String %]
[%- DataStore = TemplateInputVar %]
[%- includeList = includes %]
[%- PROCESS templates/ctxtManagerTmpls/commonMacro.tt | trim %]
/*
 * Copyright 2019-present, Infosys Limited.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
#ifndef DGM_BLOCKSTRUCTURES_H
#define DGM_BLOCKSTRUCTURES_H
/**************************************
 *
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/ctxtManagerTmpls/dataBlocks.h.tt>
 ***************************************/
#include "permDataBlock.h"
#include "tempDataBlock.h"
[%- FOREACH DataGroup = DataStore.DataGroups %]
[%- INCLUDES(DataGroup) %]
[%- END %]
[%- FOREACH header IN includeList.split(',') %]
#include <[% header %]>
[%- END %]

namespace mme
{
	[%- FOREACH DataGroup = DataStore.DataGroups %]
	[%- FOREACH DataBlock = DataGroup.DataBlocks %]
	[%- dataBlockClassName = CLASSNAME(DataBlock.BlockName) %]
	class [% dataBlockClassName %];
	[%- END %]
	[%- END %]
	
	[%- FOREACH DataGroup = DataStore.DataGroups %]
	[%- FOREACH DataBlock = DataGroup.DataBlocks %]
	[%- dataBlockClassName = CLASSNAME(DataBlock.BlockName) %] 
	class [% dataBlockClassName %]:public [% IF DataBlock.BlockType == 'Permanent' %]SM::PermDataBlock[% ELSE %]
	[%- IF DataBlock.Parent != '' %][% DataBlock.Parent %][% ELSE %]SM::TempDataBlock
	[%- END %][%- END %]
	{
		public:
	
			/****************************************
			* [% dataBlockClassName %]
			*    constructor
			****************************************/
			[% dataBlockClassName %]();
			
			/****************************************
			* ~[% dataBlockClassName %]
			*    destructor
			****************************************/
			~[% dataBlockClassName %]();
			[%- FOREACH Data = DataBlock.Data %]
			
[% INCLUDE templates/ctxtManagerTmpls/getterSetterAPIHeader.tt %]
			[%- END %]
			
			[%- FOREACH Child = DataBlock.Children %]
[%- INCLUDE templates/ctxtManagerTmpls/childAPIHeader.tt %]
			[%- END %]
		
		private:
		
			[%- FOREACH Data = DataBlock.Data %]
			[%- DataName = CLASSNAME(Data.Name) %]
			// DataName
			[%-IF Data.Cardinality=='' %]
			[%- IF Data.Type.search("enum") %]
			[% Data.Type.substr(5) %] [% Data.Name %]_m;
			[%- ELSE %]
			[% Data.Type %] [% Data.Name %]_m;
			[%- END %]
			[%-ELSE%]
			uint16_t [% Data.Name %]Len_m;
			[% Data.Type %] [% Data.Name %]_m[[% Data.Cardinality %]];
			[% END %]
			[% END %]
			[%- FOREACH Child = DataBlock.Children %]
			// [% Child.Name %]
			[%- IF Child.Type != '' %]
			[%- IF Child.Type.search('std\:\:array') %]
			uint16_t [% Child.Name %]Count_m;
			[%- END %]
			[% Child.Type %] [% Child.Name %]_m;
			[%-ELSE%]
			[% Child.Name %]* [% Child.Name %]_mp;
			[%- END %]
			[% END %]
	};
	[% END %]
	[% END %]
} // mme
#endif
