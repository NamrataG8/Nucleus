  
/*
 * Copyright 2019-present Infosys Limited  
 *   
 * SPDX-License-Identifier: Apache-2.0    
 */
 
/**************************************
 * niDetachStart.cpp
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.cpp.tt>
 **************************************/

#include "smEnumTypes.h"
#include "actionTable.h"
#include "actionHandlers/actionHandlers.h"

#include "mmeStates/niDetachStart.h"	
#include "mmeStates/niDetachWfDetAccptDelSessResp.h"

using namespace mme;
using namespace SM;

/******************************************************************************
* Constructor
******************************************************************************/
NiDetachStart::NiDetachStart():State(State_e::ni_detach_start)
{
}

/******************************************************************************
* Destructor
******************************************************************************/
NiDetachStart::~NiDetachStart()
{
}

/******************************************************************************
* creates and returns static instance
******************************************************************************/
NiDetachStart* NiDetachStart::Instance()
{
        static NiDetachStart state;
        return &state;
}

/******************************************************************************
* initializes eventToActionsMap
******************************************************************************/
void NiDetachStart::initialize()
{
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::ni_detach_req_to_ue);
                actionTable.addAction(&ActionHandlers::del_session_req);
                actionTable.setNextState(NiDetachWfDetAccptDelSessResp::Instance());
                eventToActionsMap.insert(pair<Event_e, ActionTable>(Event_e::CLR_FROM_HSS, actionTable));
        }
}
